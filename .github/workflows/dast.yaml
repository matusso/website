# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Use Dastardly to Scan and Publish Report

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Run Dastardly Action Step
        continue-on-error: true  # Allows subsequent steps to run even if this step fails
        uses: PortSwigger/dastardly-github-action@main
        with:
          target-url: 'https://www.burso.eu/'
          
      - name: Check if Report Exists
        id: check_file
        run: |
          if [ -f dastardly-report.xml ]; then
            echo "report_exists=true" >> $GITHUB_ENV
          else
            echo "report_exists=false" >> $GITHUB_ENV
          fi

      - name: Install xmllint
        run: |
          sudo apt-get update || exit 1
          sudo apt-get install -y libxml2-utils || exit 1
    
      - name: Fix XML Encoding Issues
        if: env.report_exists == 'true'
        run: |
          sed -i 's/&/&amp;/g' dastardly-report.xml || true  # Escape & characters
          xmllint --format dastardly-report.xml --output dastardly-report-fixed.xml || true

      - name: Publish Test Report
        if: env.report_exists == 'true' # Run only if the report exists
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: '**/dastardly-report-fixed.xml'  # Using the fixed XML file
          require_tests: false  # Prevents failure if no valid test results are found
          fail_on_failure: false  # Ensures the pipeline doesn't break